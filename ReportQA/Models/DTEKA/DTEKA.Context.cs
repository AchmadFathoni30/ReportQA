//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReportQA.Models.DTEKA
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class DTEKAEntities : DbContext
    {
        public DTEKAEntities()
            : base("name=DTEKAEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<GHHB> GHHB { get; set; }
        public DbSet<ICITEM> ICITEM { get; set; }
        public DbSet<POLRUSAKP> POLRUSAKP { get; set; }
        public DbSet<POLRUSAKD> POLRUSAKD { get; set; }
        public DbSet<POLRUSAKH> POLRUSAKH { get; set; }
    
        public virtual ObjectResult<PoolRusak_Result> PoolRusak(Nullable<System.DateTime> tglFrom, Nullable<System.DateTime> tglTo, Nullable<bool> status)
        {
            var tglFromParameter = tglFrom.HasValue ?
                new ObjectParameter("tglFrom", tglFrom) :
                new ObjectParameter("tglFrom", typeof(System.DateTime));
    
            var tglToParameter = tglTo.HasValue ?
                new ObjectParameter("tglTo", tglTo) :
                new ObjectParameter("tglTo", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoolRusak_Result>("PoolRusak", tglFromParameter, tglToParameter, statusParameter);
        }
    
        public virtual int PoolRusakInsertValidate(string p_norusak)
        {
            var p_norusakParameter = p_norusak != null ?
                new ObjectParameter("p_norusak", p_norusak) :
                new ObjectParameter("p_norusak", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PoolRusakInsertValidate", p_norusakParameter);
        }
    
        public virtual ObjectResult<PoolRusakV_Result> PoolRusakV(Nullable<System.DateTime> tglFrom, Nullable<System.DateTime> tglTo, Nullable<bool> status)
        {
            var tglFromParameter = tglFrom.HasValue ?
                new ObjectParameter("tglFrom", tglFrom) :
                new ObjectParameter("tglFrom", typeof(System.DateTime));
    
            var tglToParameter = tglTo.HasValue ?
                new ObjectParameter("tglTo", tglTo) :
                new ObjectParameter("tglTo", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoolRusakV_Result>("PoolRusakV", tglFromParameter, tglToParameter, statusParameter);
        }
    }
}
